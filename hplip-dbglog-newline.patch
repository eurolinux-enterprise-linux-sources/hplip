diff -up hplip-3.13.5/prnt/hpcups/HPCupsFilter.cpp.dbglog-newline hplip-3.13.5/prnt/hpcups/HPCupsFilter.cpp
--- hplip-3.13.5/prnt/hpcups/HPCupsFilter.cpp.dbglog-newline	2013-05-14 15:01:34.288431852 +0200
+++ hplip-3.13.5/prnt/hpcups/HPCupsFilter.cpp	2013-05-14 15:03:08.103139571 +0200
@@ -471,7 +471,7 @@ DRIVER_ERROR HPCupsFilter::startPage (cu
             m_DBusComm.sendEvent(EVENT_PRINT_FAILED_MISSING_PLUGIN, "Plugin missing", m_JA.job_id, m_JA.user_name);
 
         }
-        dbglog ("m_Job initialization failed with error = %d", err);
+        dbglog ("m_Job initialization failed with error = %d\n", err);
         ppdClose(m_ppd);
         m_ppd = NULL;
         return err;
@@ -564,7 +564,7 @@ int HPCupsFilter::StartPrintJob(int  arg
         }
 
         if (m_iLogLevel & BASIC_LOG)
-            dbglog("HPCUPS: processRasterData returned %d, calling closeFilter()", err);
+            dbglog("HPCUPS: processRasterData returned %d, calling closeFilter()\n", err);
 
         closeFilter();
         cupsRasterClose(cups_raster);
@@ -576,7 +576,7 @@ int HPCupsFilter::StartPrintJob(int  arg
     }
 
     if (m_iLogLevel & BASIC_LOG)
-        dbglog("HPCUPS: StartPrintJob end of job, calling closeFilter()");
+        dbglog("HPCUPS: StartPrintJob end of job, calling closeFilter()\n");
 
     closeFilter();
     cupsRasterClose(cups_raster);
@@ -728,7 +728,7 @@ int HPCupsFilter::processRasterData(cups
                 //Need to revisit to crosscheck if it is a firmware issue.
 
                 *m_pPrinterBuffer = 0x01;
-                dbglog("First raster data plane.." );
+                dbglog("First raster data plane..\n" );
             }
 
             if (this->isBlankRaster((BYTE *) m_pPrinterBuffer, &cups_header)) {
diff -up hplip-3.13.5/prnt/hpcups/Lidil.cpp.dbglog-newline hplip-3.13.5/prnt/hpcups/Lidil.cpp
--- hplip-3.13.5/prnt/hpcups/Lidil.cpp.dbglog-newline	2013-05-10 12:03:36.000000000 +0200
+++ hplip-3.13.5/prnt/hpcups/Lidil.cpp	2013-05-14 15:01:34.985422251 +0200
@@ -103,7 +103,7 @@ DRIVER_ERROR Lidil::Configure(Pipeline *
     if (m_pPM->BaseResX != m_pQA->horizontal_resolution ||
         m_pPM->BaseResY != m_pQA->vertical_resolution)
     {
-        dbglog("Requested resolution not supported with requested printmode");
+        dbglog("Requested resolution not supported with requested printmode\n");
         return UNSUPPORTED_PRINTMODE;
     }
 
@@ -166,7 +166,7 @@ DRIVER_ERROR Lidil::StartJob(SystemServi
 
     if (!selectPrintMode())
     {
-        dbglog("selectPrintMode failed, PrintMode name = %s", m_pQA->print_mode_name);
+        dbglog("selectPrintMode failed, PrintMode name = %s\n", m_pQA->print_mode_name);
         return UNSUPPORTED_PRINTMODE;
     }
     
@@ -174,7 +174,7 @@ DRIVER_ERROR Lidil::StartJob(SystemServi
     if (m_pPM->BaseResX != m_pQA->horizontal_resolution ||
         m_pPM->BaseResY != m_pQA->vertical_resolution)
     {
-        dbglog("Requested resolution not supported with requested printmode");        
+        dbglog("Requested resolution not supported with requested printmode\n");
 		dbglog(" m_pPM->BaseResX = %d\n",m_pPM->BaseResX);
 		dbglog(" m_pPM->BaseResY = %d\n",m_pPM->BaseResY);
 		dbglog(" m_pQA->horizontal_resolution = %d\n",m_pQA->horizontal_resolution);
@@ -193,7 +193,7 @@ DRIVER_ERROR Lidil::StartJob(SystemServi
     err = allocateSwathBuffers();
     if (err != NO_ERROR)
     {
-        dbglog("allocateSwathBuffers failed, err = %d", err);
+        dbglog("allocateSwathBuffers failed, err = %d\n", err);
         return err;
     }
 
@@ -625,7 +625,7 @@ bool Lidil::selectPrintMode()
 {
     if (m_pJA->printer_platform[0] == 0)
     {
-        dbglog("printer_platform is undefined");
+        dbglog("printer_platform is undefined\n");
         return false;
     }
     for (unsigned int i = 0; i < sizeof(lidil_print_modes_table) / sizeof(lidil_print_modes_table[0]); i++)
@@ -635,7 +635,7 @@ bool Lidil::selectPrintMode()
             return selectPrintMode(i);
         }
     }
-    dbglog("Unsupported printer_platform: %s", m_pJA->printer_platform);
+    dbglog("Unsupported printer_platform: %s\n", m_pJA->printer_platform);
     return false;
 }
 
diff -up hplip-3.13.5/prnt/hpcups/Pcl3.cpp.dbglog-newline hplip-3.13.5/prnt/hpcups/Pcl3.cpp
--- hplip-3.13.5/prnt/hpcups/Pcl3.cpp.dbglog-newline	2013-05-10 12:03:36.000000000 +0200
+++ hplip-3.13.5/prnt/hpcups/Pcl3.cpp	2013-05-14 15:01:34.985422251 +0200
@@ -66,13 +66,13 @@ DRIVER_ERROR Pcl3::Configure(Pipeline **
 
     if (!selectPrintMode())
     {
-        dbglog("selectPrintMode failed, PrintMode name = %s", m_pQA->print_mode_name);
+        dbglog("selectPrintMode failed, PrintMode name = %s\n", m_pQA->print_mode_name);
         return UNSUPPORTED_PRINTMODE;
     }
     if (m_pPM->BaseResX != m_pQA->horizontal_resolution ||
         m_pPM->BaseResY != m_pQA->vertical_resolution)
     {
-        dbglog("Requested resolution not supported with requested printmode");
+        dbglog("Requested resolution not supported with requested printmode\n");
 	return UNSUPPORTED_PRINTMODE;
     }
 
@@ -220,7 +220,7 @@ void Pcl3::configureRasterData()
 {
     if (m_pPM == NULL)
     {
-        dbglog("configureRasterData: m_pPM is NULL");
+        dbglog("configureRasterData: m_pPM is NULL\n");
         return;
     }
     BYTE    *p = cur_pcl_buffer_ptr;
@@ -255,7 +255,7 @@ bool Pcl3::selectPrintMode()
 {
     if (m_pJA->printer_platform[0] == 0)
     {
-        dbglog("printer_platform is undefined");
+        dbglog("printer_platform is undefined\n");
         return false;
     }
     for (unsigned int i = 0; i < sizeof(pcl3_print_modes_table) / sizeof(pcl3_print_modes_table[0]); i++)
@@ -265,7 +265,7 @@ bool Pcl3::selectPrintMode()
 	    return selectPrintMode(i);
 	}
     }
-    dbglog("Unsupported printer_platform: %s", m_pJA->printer_platform);
+    dbglog("Unsupported printer_platform: %s\n", m_pJA->printer_platform);
     return false;
 }
 
diff -up hplip-3.13.5/prnt/hpcups/Pcl3Gui.cpp.dbglog-newline hplip-3.13.5/prnt/hpcups/Pcl3Gui.cpp
--- hplip-3.13.5/prnt/hpcups/Pcl3Gui.cpp.dbglog-newline	2013-05-10 12:03:36.000000000 +0200
+++ hplip-3.13.5/prnt/hpcups/Pcl3Gui.cpp	2013-05-14 15:01:34.986422237 +0200
@@ -66,13 +66,13 @@ DRIVER_ERROR Pcl3Gui::Configure(Pipeline
 
     if (!selectPrintMode())
     {
-        dbglog("selectPrintMode failed, PrintMode name = %s", m_pQA->print_mode_name);
+        dbglog("selectPrintMode failed, PrintMode name = %s\n", m_pQA->print_mode_name);
         return UNSUPPORTED_PRINTMODE;
     }
     if (m_pPM->BaseResX != m_pQA->horizontal_resolution ||
         m_pPM->BaseResY != m_pQA->vertical_resolution)
     {
-        dbglog("Requested resolution not supported with requested printmode");
+        dbglog("Requested resolution not supported with requested printmode\n");
     return UNSUPPORTED_PRINTMODE;
     }
 
@@ -224,7 +224,7 @@ void Pcl3Gui::configureRasterData()
 {
     if (m_pPM == NULL)
     {
-        dbglog("configureRasterData: m_pPM is NULL");
+        dbglog("configureRasterData: m_pPM is NULL\n");
         return;
     }
     BYTE    *p = cur_pcl_buffer_ptr;
@@ -259,7 +259,7 @@ bool Pcl3Gui::selectPrintMode()
 {
     if (m_pJA->printer_platform[0] == 0)
     {
-        dbglog("printer_platform is undefined");
+        dbglog("printer_platform is undefined\n");
         return false;
     }
     for (unsigned int i = 0; i < sizeof(pcl3_gui_print_modes_table) / sizeof(pcl3_gui_print_modes_table[0]); i++)
@@ -269,7 +269,7 @@ bool Pcl3Gui::selectPrintMode()
             return selectPrintMode(i);
         }
     }
-    dbglog("Unsupported printer_platform: %s", m_pJA->printer_platform);
+    dbglog("Unsupported printer_platform: %s\n", m_pJA->printer_platform);
     return false;
 }
 
